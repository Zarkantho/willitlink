# This file represents the required schema for the human generated modules file.
#
# Essentially, this file contains nested categorizations of files along with descriptions and names
# at each level.  There are currently three nested categories:
#
# System - Top level category.  This defines the highest level architecure of the project.  For a
# database, this will be things like "queries", "storage", "network", and "utilities".
#
# Module - Nested within System.  This defines more granular functional units in a project.  For
# example, within the "queries" System, you may have the "aggregation", "text search queries", "geo
# queries", and "queries core".
#
# Group - Nested within Module.  This defines logical groupings of files within a functional unit.
# for example, in the "text search queries" module, you may have "stemming" (normalizing words to
# their canonical form), and "stopword handling" (removing things like "and" and "the") as logical
# groups within the "text search queries" module.
#
# Each level should have a name and a description.  A project file with this format can be read into
# a script that attaches any autogenerated data that may be useful for understanding, such as
# dependency data or header include information.



# Top level object of all systems in this project.  Keys are system names and values are system
# information.
type: object

# patternProperties means that the schema applies to every field matching the given regular
# expression in this object.  This is needed because our key is the system name.
patternProperties:
    # Apply the following schema to the value of all fields that match the regex .*
    .*:

        ## System Information Object ##
        type: object
        required:
        - description
        - modules
        #- name # TODO: make name a required property
        properties:
            # Description of this system
            description:
                type: string

            # Name of this system
            name:
                type: string

            # Modules in this system
            modules:
                type: array
                items:

                    ## Module Information Object ##
                    type: object
                    required:
                    - description
                    - groups
                    - name
                    properties:
                        # Description of this module
                        description:
                            type: string

                        # Name of this module
                        name:
                            type: string

                        # Logical groupings of files in this module
                        groups:
                            type: array
                            items:

                                ## Group Information Object ##
                                required:
                                - comments
                                - files
                                #- name # TODO: make name a required property
                                type: object
                                properties:
                                    # Description of this group
                                    comments:
                                        type: string

                                    # Name of this group
                                    name:
                                        type: string

                                    # Files in this group
                                    files:
                                        type: array
                                        items:

                                            # File name of file in this group
                                            type: string
                                            pattern: .* # Regular expression that must match

                                additionalProperties: false
                    # additionalProperties: false # Whether additional properties besides the
                    # ones explicitly stated are allowed
